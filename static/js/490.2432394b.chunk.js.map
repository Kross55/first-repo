{"version":3,"file":"static/js/490.2432394b.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/MyPosts/AddPostFormik/AddPostForm.module.css?da4c","components/Profile/MyPosts/AddPostFormik/AddPostForm.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/validators/validators.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"AddPostForm_error__4btHf\"};","import React from \"react\";\r\nimport s from \"./AddPostForm.module.css\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { minMaxLengthCreator } from \"../../../common/validators/validators\";\r\n\r\nconst validationSchemaAddPost = Yup.object().shape( {\r\n    newPostBody: minMaxLengthCreator(0, 15).required(\"Required\")\r\n } );\r\n\r\nconst AddPostForm = (props) => {\r\n    let submit = (values) => {\r\n        props.addPost(values.newPostBody)\r\n    }\r\n    return (\r\n        <Formik\r\n         initialValues={{\r\n            newPostBody: \"\",\r\n         }}\r\n         validateOnBlur\r\n         validationSchema={validationSchemaAddPost}\r\n         onSubmit={submit}\r\n        >\r\n        { ({isValid, handleSubmit, dirty}) => (\r\n        <Form>\r\n            <div>\r\n                <Field \r\n                    as='textarea'\r\n                    name='newPostBody'\r\n                    placeholder='Yo! post here'\r\n                />\r\n                <ErrorMessage className={s.error} name='newPostBody' component=\"div\" />\r\n            </div>\r\n            <div>\r\n                <button \r\n                    disabled={!isValid && !dirty}\r\n                    onClick={handleSubmit}\r\n                    type={\"submit\"}>Add post</button>\r\n            </div>\r\n        </Form>\r\n        )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddPostForm","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__d43M1\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__TALgj\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://images-na.ssl-images-amazon.com/images/I/91ErqttBmKL._RI_.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likes}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport AddPostForm from \"./AddPostFormik/AddPostForm\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    \r\n    let postsElements =\r\n        [...props.posts]//копируем пропсы, чтобы не мутировать стейт\r\n            .reverse()//мутирующий метод массива(чтобы его применить нужно предварительно скопировать массив)\r\n            .map( p => <Post message={p.message} likes={p.likes}/>)//не мутирующий метод массива\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            My posts\r\n            <div>\r\n                <AddPostForm addPost={props.addPost} />\r\n            </div>\r\n            <div>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { addPost } from \"../../../redux/profileReduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet addStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText \r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect (addStateToProps, {addPost}) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ProfileInfo_item__+4j3c\",\"profileView\":\"ProfileInfo_profileView__EU+PT\",\"smile\":\"ProfileInfo_smile__ByFiF\"};","import React, {useState, useEffect} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n      setStatus(props.status) \r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deActivateEditMode}\r\n                        value={status} \r\n                        />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport smile from '../../../assets/images/smile.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile){\r\n       return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<div className={s.item}>\r\n                <img src=\"https://mobimg.b-cdn.net/v3/fetch/70/708698fd251a43214d6198c0c6438156.jpeg\"/>\r\n            </div>*/}\r\n            <div className={s.profileView}>\r\n                <img src={props.profile.photos.large}/>\r\n                <div>{props.profile.fullName}</div>\r\n                <ProfileStatusWithHooks\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus} />\r\n                <div className={s.smile}>Ищу работу: {props.profile.lookingForAJob ? <img src={smile}/> : null}</div>\r\n                <div>Описание: {props.profile.lookingForAJobDescription}</div>\r\n                <div>Мои контакты:</div>\r\n                <div>\r\n                    <div><a href='' >{props.profile.contacts.facebook}</a></div>\r\n                    <div><a href='' >{props.profile.contacts.vk}</a></div>\r\n                    <div><a href='' >{props.profile.contacts.twitter}</a></div>\r\n                    <div><a href='' >{props.profile.contacts.instagram}</a></div>\r\n                    <div><a href='' >{props.profile.contacts.github}</a></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profileReduser\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n  return(props)=>{\r\n\r\n     const match  = {params: useParams()}\r\n     return <Children {...props}  match = {match}/>\r\n }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userIdNew;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      }\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n      this.props.getUserProfile(userId)\r\n      this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return <Profile\r\n      {...this.props}\r\n      profile={this.props.profile}\r\n      status={this.props.status}\r\n      updateStatus={this.props.updateStatus} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n","import * as Yup from \"yup\";\r\n\r\nexport const minMaxLengthCreator = (minLength, maxLength) =>\r\n  Yup.string()\r\n    .min(minLength, `Must be longer than ${minLength} symbols`)\r\n    .max(maxLength, `Max length is ${maxLength} symbols`)\r\n","import React from 'react'\r\nimport {Navigate} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to='/login' />\r\n      }\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n    \r\n    let  ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["validationSchemaAddPost","Yup","shape","newPostBody","minMaxLengthCreator","required","props","initialValues","validateOnBlur","validationSchema","onSubmit","values","addPost","isValid","handleSubmit","dirty","as","name","placeholder","className","s","component","disabled","onClick","type","src","message","likes","postsElements","posts","reverse","map","p","connect","state","profilePage","newPostText","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","fullName","lookingForAJob","lookingForAJobDescription","href","contacts","facebook","vk","twitter","instagram","github","Preloader","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","userIdNew","authorizedUserId","history","push","getUserProfile","getStatus","React","compose","auth","id","withAuthRedirect","minLength","maxLength","min","max","mapStateToPropsForRedirect","isAuth","Component","RedirectComponent","to"],"sourceRoot":""}