{"version":3,"file":"static/js/548.e279cad0.chunk.js","mappings":"+KACA,G,QAA0B,0BAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAAwI,wBAAxI,EAA2K,0BAA3K,EAA+M,yBAA/M,EAAkP,yBAAlP,EAAoR,wB,mBCgBpR,EAbmB,SAACA,GAChB,IAAIC,EAEJ,OADAA,EAAI,mBAAeD,EAAME,KAErB,gBAAKC,UAAWC,EAAhB,UACI,UAAC,KAAD,CAASC,GAAIJ,EAAME,UAAW,SAAAG,GAAC,OAAIA,EAAEC,SAAWH,EAAWA,GAA3D,WACI,gBAAKI,IAAI,0EACRR,EAAMS,WCGvB,EAVoB,SAACT,GACjB,OACQ,iBAAKG,UAAWC,EAAhB,WACI,gBAAKI,IAAI,0EACRR,EAAMU,YCMvB,EAVmB,SAACV,GAChB,OACI,iBAAKG,UAAWC,EAAhB,UACKJ,EAAMW,QACP,gBAAKH,IAAI,8ECPrB,EAAwB,8BAAxB,EAA+D,+B,oBCKzDI,E,OAA6BC,KAAaC,MAAO,CACnDC,gBAAgBC,EAAAA,EAAAA,GAAoB,EAAG,IAAIC,SAAS,cAuCxD,EApCuB,SAACjB,GAIpB,OACI,SAAC,KAAD,CACCkB,cAAe,CACbH,eAAgB,IAElBI,gBAAc,EACdC,iBAAkBR,EAClBS,SAVQ,SAACC,GACVtB,EAAMuB,eAAeD,EAAOP,iBAG5B,SAQE,gBAAES,EAAF,EAAEA,QAASC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,MAAzB,OACF,UAAC,KAAD,YACI,4BACI,SAAC,KAAD,CACIC,GAAG,WACHlB,KAAK,iBACLmB,YAAY,uBAEhB,SAAC,KAAD,CAAczB,UAAWC,EAASK,KAAK,iBAAiBoB,UAAU,YAEtE,0BACI,mBACI1B,UAAWC,EACX0B,UAAWN,IAAYE,EACvBK,QAASN,EACTO,KAAM,SAJV,2BCHhB,EAxBgB,SAAChC,GACb,IAAIiC,EACAjC,EAAMkC,QAAQC,KAAK,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAY3B,KAAM2B,EAAE3B,KAAMP,GAAIkC,EAAElC,QACxDmC,EACArC,EAAMsC,SAASH,KAAK,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAa7B,QAAS6B,EAAE7B,aACjD8B,EACAxC,EAAMyC,QAAQN,KAAK,SAAA7B,GAAC,OAAI,SAAC,EAAD,CAAYK,OAAQL,EAAEK,YAElD,OACI,iBAAKR,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACM6B,KAEN,iBAAK9B,UAAWC,EAAhB,UACMiC,GACF,SAAC,EAAD,CAAgBd,eAAgBvB,EAAMuB,qBAE1C,gBAAKpB,UAAWC,EAAhB,SACMoC,Q,oBCVlB,GAAeE,E,QAAAA,KACXC,EAAAA,EAAAA,KAVkB,SAACC,GACnB,MAAO,CACHV,QAASU,EAAMC,YAAYX,QAC3BI,SAAUM,EAAMC,YAAYP,SAC5BG,QAASG,EAAMC,YAAYJ,QAC3B1B,eAAgB6B,EAAMC,YAAY9B,kBAKZ,CAACQ,eAAAA,EAAAA,IAC3BuB,EAAAA,EAFJ,CAGEC,I,kEChBW/B,EAAsB,SAACgC,EAAWC,GAAZ,OACjCpC,EAAAA,KACGqC,IAAIF,EADP,8BACyCA,EADzC,aAEGG,IAAIF,EAFP,wBAEmCA,EAFnC,e,iJCCEG,EAA6B,SAACR,GAC9B,MAAO,CACLS,OAAQT,EAAMU,KAAKD,SAIZP,EAAmB,SAACS,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAKzD,MAAMqD,QAGT,SAACE,GAAD,UAAeE,KAAKzD,SAFlB,SAAC,KAAD,CAAUK,GAAG,eAJmB,GACbqD,EAAAA,WAU9B,OADsCf,EAAAA,EAAAA,IAAQS,EAART,CAAoCa","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/AnswerItem/AnswerItem.jsx","webpack://react-kabzda-1/./src/components/Dialogs/AddMessageForm/AddMessageForm.module.css?2bba","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/validators/validators.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__o1cMG\",\"dialogItems\":\"Dialogs_dialogItems__-Z0Pp\",\"dialog\":\"Dialogs_dialog__liFFu\",\"active\":\"Dialogs_active__4ayRK\",\"messages\":\"Dialogs_messages__FLW1l\",\"message\":\"Dialogs_message__VWrGN\",\"answers\":\"Dialogs_answers__G4ghA\",\"answer\":\"Dialogs_answer__1DzgW\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path;\r\n    path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} className={a => a.isActive ? s.active : s.dialog}>\r\n                <img src=\"https://images-na.ssl-images-amazon.com/images/I/91ErqttBmKL._RI_.jpg\" />\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n            <div className={s.message}>\r\n                <img src=\"https://images-na.ssl-images-amazon.com/images/I/91ErqttBmKL._RI_.jpg\" />\r\n                {props.message}\r\n            </div>\r\n    );\r\n};\r\n\r\n\r\nexport default MessageItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst AnswerItem = (props) => {\r\n    return (\r\n        <div className={s.answer}>\r\n            {props.answer}\r\n            <img src=\"https://images-na.ssl-images-amazon.com/images/I/91ErqttBmKL._RI_.jpg\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AnswerItem;","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"AddMessageForm_error__cDVhD\",\"button\":\"AddMessageForm_button__lxUsL\"};","import React from \"react\";\r\nimport s from \"./AddMessageForm.module.css\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { minMaxLengthCreator } from \"../../common/validators/validators\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst validationSchemaAddMessage = Yup.object().shape( {\r\n    newMessageBody: minMaxLengthCreator(5, 20).required(\"Required\")\r\n } );\r\n\r\nconst AddMessageForm = (props) => {\r\n    let submit = (values) => {\r\n        props.addMessageBody(values.newMessageBody)\r\n    }\r\n    return (\r\n        <Formik\r\n         initialValues={{\r\n           newMessageBody: \"\",\r\n         }}\r\n         validateOnBlur\r\n         validationSchema={validationSchemaAddMessage}\r\n         onSubmit={submit}\r\n        >\r\n        { ({isValid, handleSubmit, dirty}) => (\r\n        <Form>\r\n            <div>\r\n                <Field \r\n                    as='textarea'\r\n                    name='newMessageBody'\r\n                    placeholder='text your message'\r\n                />\r\n                <ErrorMessage className={s.error} name='newMessageBody' component=\"div\" />\r\n            </div>\r\n            <div>\r\n                <button \r\n                    className={s.button}\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={handleSubmit}\r\n                    type={\"submit\"}>Send</button>\r\n            </div>\r\n        </Form>\r\n        )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddMessageForm","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements =\r\n        props.dialogs.map( d => <DialogItem name={d.name} id={d.id}/>);\r\n    let messagesElements =\r\n        props.messages.map( m => <MessageItem message={m.message}/>);\r\n    let answersElements =\r\n        props.answers.map( a => <AnswerItem answer={a.answer}/>);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { messagesElements }\r\n                <AddMessageForm addMessageBody={props.addMessageBody}/>\r\n            </div>\r\n            <div className={s.answers}>\r\n                { answersElements }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import {addMessageBody} from \"../../redux/dialogsReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,//state=store.getState()\r\n        messages: state.dialogsPage.messages,\r\n        answers: state.dialogsPage.answers,\r\n        newMessageBody: state.dialogsPage.newMessageBody,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {addMessageBody}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n","import * as Yup from \"yup\";\r\n\r\nexport const minMaxLengthCreator = (minLength, maxLength) =>\r\n  Yup.string()\r\n    .min(minLength, `Must be longer than ${minLength} symbols`)\r\n    .max(maxLength, `Max length is ${maxLength} symbols`)\r\n","import React from 'react'\r\nimport {Navigate} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to='/login' />\r\n      }\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n    \r\n    let  ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["props","path","id","className","s","to","a","isActive","src","name","message","answer","validationSchemaAddMessage","Yup","shape","newMessageBody","minMaxLengthCreator","required","initialValues","validateOnBlur","validationSchema","onSubmit","values","addMessageBody","isValid","handleSubmit","dirty","as","placeholder","component","disabled","onClick","type","dialogsElements","dialogs","map","d","messagesElements","messages","m","answersElements","answers","compose","connect","state","dialogsPage","withAuthRedirect","Dialogs","minLength","maxLength","min","max","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}